export EDITOR=vim
export VISUAL=vim
export TERM='xterm-256color'

export ZPLUG_HOME=~/.zplug

if test -e ~/.zplug; then
  :
else
  git clone https://github.com/zplug/zplug $ZPLUG_HOME
fi

source $ZPLUG_HOME/init.zsh

zplug "zsh-users/zsh-syntax-highlighting", defer:3

zplug "zsh-users/zsh-history-substring-search"

zplug "zsh-users/zsh-completions"

zplug "peco/peco", as:command, from:gh-r, use:"*amd64*"

# check install
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# load plugins and path for commands
zplug load --verbose

# colors
autoload -Uz colors
colors

# keybind
bindkey -e

# history
HISTFILE=~/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000

# prompt
PROMPT="%{${fg[cyan]}%}[%n@%m]%{${reset_color}%} %~ %# "

# 単語の区切り文字を指定する
autoload -Uz select-word-style
select-word-style default
# ここで指定した文字は単語区切りとみなされる
# / も区切りと扱うので、^W でディレクトリ１つ分を削除できる
zstyle ':zle:*' word-chars " /=;@:{},|"
zstyle ':zle:*' word-style unspecified

# zsh-completions
fpath=(/usr/local/share/zsh-completions $fpath)

# 補完
# 補完機能を有効にする
autoload -Uz compinit
compinit

# 補完で小文字でも大文字にマッチさせる
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# ../ の後は今いるディレクトリを補完しない
zstyle ':completion:*' ignore-parents parent pwd ..

# sudo の後ろでコマンド名を補完する
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin \
                   /usr/sbin /usr/bin /sbin /bin /usr/X11R6/bin

# ps コマンドのプロセス名補完
zstyle ':completion:*:processes' command 'ps x -o pid,s,args'

# vcs_info

autoload -Uz vcs_info
zstyle ':vcs_info:*' formats '(%s)-[%b]'
zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a]'
precmd () {
    psvar=()
    LANG=en_US.UTF-8 vcs_info
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}
RPROMPT="%1(v|%F{green}%1v%f|)"

# オプション
# 日本語ファイル名を表示可能にする
setopt print_eight_bit

# beep を無効にする
setopt no_beep

# フローコントロールを無効にする
setopt no_flow_control

# '#' 以降をコメントとして扱う
setopt interactive_comments

# ディレクトリ名だけでcdする
setopt auto_cd

# cd したら自動的にpushdする
setopt auto_pushd

# 重複したディレクトリを追加しない
setopt pushd_ignore_dups

# = の後はパス名として補完する
setopt magic_equal_subst

# 同時に起動したzshの間でヒストリを共有する
setopt share_history

# 同じコマンドをヒストリに残さない
setopt hist_ignore_all_dups

# ヒストリファイルに保存するとき、すでに重複したコマンドがあったら古い方を削除する
setopt hist_save_nodups

# スペースから始まるコマンド行はヒストリに残さない
setopt hist_ignore_space

# ヒストリに保存するときに余分なスペースを削除する
setopt hist_reduce_blanks

# 補完候補が複数あるときに自動的に一覧表示する
setopt auto_menu

# 高機能なワイルドカード展開を使用する
setopt extended_glob

########################################
# alias
alias la="ls -a"
alias ll="ls -l"
alias lal="ls -al"

# tmux用の設定
alias tmux-changekey='tmux set-option -ag prefix C-t'
alias tmux-revertkey='tmux set-option -ag prefix C-b'

# ^R で履歴検索をするときに * でワイルドカードを使用出来るようにする
bindkey '^R' history-incremental-pattern-search-backward

########################################

# clipboard
if which pbcopy >/dev/null 2>&1 ; then
    # Mac
    alias -g C='| pbcopy'
elif which xsel >/dev/null 2>&1 ; then
    # Linux
    alias -g C='| xsel --input --clipboard'
elif which putclip >/dev/null 2>&1 ; then
    # Cygwin
    alias -g C='| putclip'
fi

########################################
# OS
case ${OSTYPE} in
    darwin*)
        export CLICOLOR=1
        alias ls='ls -G -F'
        alias emacs='/usr/local/bin/emacs'
        alias chrome='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome'
        alias pip3-updater="pip3 list --outdated --format=legacy | awk '{print $1}' | xargs pip3 install -U"
	typeset -U path cdpath fpath manpath
	## sudo用のpathを設定
	typeset -xT SUDO_PATH sudo_path
	typeset -U sudo_path
	sudo_path=({/usr/local,/usr,}/sbin(N-/))
	## pathを設定
	path=(~/bin(N-/) /usr/local/bin(N-/) ${path})
	export ZPLUG_HOME=/usr/local/opt/zplug
	export LANG=ja_JP.UTF-8
  export PATH=$PATH:/usr/local/opt/go/libexec/bin:~/.nodebrew/current/bin
	source ~/.iterm2_shell_integration.`basename $SHELL`
  # peco
#function peco-history-selection() {
#      BUFFER=`history -n 1 | tail -r  | awk '!a[$0]++' | peco`
#      CURSOR=$#BUFFER
#      zle reset-prompt
#  }
#  zle -N peco-history-selection
#  bindkey '^R' peco-history-selection

  function select-history() {
  BUFFER=$(history -n -r 1 | fzf --no-sort +m --query "$LBUFFER" --prompt="History > ")
  CURSOR=$#BUFFER
  }
  zle -N select-history
  bindkey '^r' select-history
        ;;
    linux*)
        #Linux用の設定
        ;;
esac

if which hash nvim > /dev/null; then
	alias vim='nvim';
fi

# vim:set ft=zsh:
